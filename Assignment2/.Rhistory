optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=500)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- sapply(grid, profile_2d)
profile_values
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=500)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- sapply(grid, profile_2d)
prof?apply
?apply
profile_values <- lapply(grid, profile_2d)
profile_likelihood(
profile_values
profile_values
profile_values <- lapply(t(grid), profile_2d)
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- lapply(t(grid), profile_2d)
profile_values
profile_values <- sapply(t(grid), profile_2d)
profile_values
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
print(grid[1])
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- sapply(t(grid), profile_2d)
t(grid)
t(grid)[1}
t(grid)[1]
print(grid[1])
optimize(nll, c(0.0001, 1))$objective
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(grid[1])
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- sapply(t(grid), profile_2d)
profile_values
grid
print(grid[[1]])
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(grid[[1]])
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- sapply(t(grid), profile_2d)
print(grid$)
print(grid$x)
optimize(nll, c(0.0001, 1))$objective
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(grid$x)
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- sapply(t(grid), profile_2d)
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- mapply(grid, profile_2d)
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(grid)
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- mapply(grid, profile_2d)
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(grid)
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- mapply(grid, profile_2d)
profile_2d <- function(...){
lambda = list(...)
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(lambda)
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- mapply(grid, profile_2d)
profile_values <- mapply(profile_2d, grid)
print(lambda[1])
profile_2d <- function(...){
lambda = list(...)
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(lambda[1])
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- mapply(profile_2d, grid)
profile_2d <- function(...){
lambda = list(...)
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(lambda[2])
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(x=lambdas, y=lambdas)
profile_values <- mapply(profile_2d, grid)
profile_values <- outer(lambdas, lambdas, profile_2d)
profile_2d <- function(lambda){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(lambda[2])
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
profile_values <- outer(lambdas, lambdas, profile_2d)
profile_2d <- function(X, Y){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(lambda[2])
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
profile_values <- outer(lambdas, lambdas, profile_2d)
print(X)
optimize(nll, c(0.0001, 1))$objective
profile_2d <- function(X, Y){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(X)
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
profile_values <- outer(lambdas, lambdas, profile_2d)
?apply
grid = expand.grid(lambdas, lambdas)
profile_values <- apply(lambdas, 1, profile_2d)
grid = expand.grid(lambdas, lambdas)
grid
profile_values <- apply(grid, 1, profile_2d)
profile_2d <- function(grid){
print(grid)
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(lambdas, lambdas)
profile_values <- apply(grid, 1, profile_2d)
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(female_lambda = lambdas, male_lambda=lambdas)
profile_values <- apply(grid, 1, profile_2d)
profile_2d <- function(grid){
print(grid)
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid$female_lambda + (!is_female)*grid$male_lambda
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(female_lambda = lambdas, male_lambda=lambdas)
profile_values <- apply(grid, 1, profile_2d)
print(grid['female_lambda'])
profile_2d <- function(grid){
print(grid['female_lambda'])
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid$female_lambda + (!is_female)*grid$male_lambda
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(female_lambda = lambdas, male_lambda=lambdas)
profile_values <- apply(grid, 1, profile_2d)
print(grid[1])
profile_2d <- function(grid){
print(grid[1])
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid$female_lambda + (!is_female)*grid$male_lambda
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(female_lambda = lambdas, male_lambda=lambdas)
profile_values <- apply(grid, 1, profile_2d)
profile_2d <- function(grid){
print(grid[1])
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=5)
grid = expand.grid(female_lambda = lambdas, male_lambda=lambdas)
profile_values <- apply(grid, 1, profile_2d)
profile_values
lambdas <- seq(9, 15, length.out=500)
grid = expand.grid(female_lambda = lambdas, male_lambda=lambdas)
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=500)
grid = expand.grid(female_lambda = lambdas, male_lambda=lambdas)
profile_values <- apply(grid, 1, profile_2d)
?contourplot
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 1))$objective
}
lambdas <- seq(9, 15, length.out=100)
grid = expand.grid(female_lambda = lambdas, male_lambda=lambdas)
profile_values <- apply(grid, 1, profile_2d)
?contourplot
?contour
contour(lambdas, lambdas, nll_to_L(profile_values))
nll_to_L(profile_values))
nll_to_L(profile_values)
contourplot(
contourplot
?contourplot
grid$likelihood <- nll_to_L(profile_values)
contourplot(likelihood ~ female_lambda * male_lambda, grid)
male_lambda <- seq(5, 20, length.out=100)
female_lambda <- seq(9, 15, length.out=100)
grid = expand.grid(female_lambda = lambdas, male_lambda=lambdas)
profile_values <- apply(grid, 1, profile_2d)
grid$likelihood <- nll_to_L(profile_values)
contourplot(likelihood ~ female_lambda * male_lambda, grid)
male_lambda <- seq(5, 20, length.out=100)
female_lambda <- seq(9, 15, length.out=100)
grid = expand.grid(female_lambda = female_lambda, male_lambda=male_lambdas)
profile_values <- apply(grid, 1, profile_2d)
male_lambda <- seq(5, 20, length.out=100)
female_lambda <- seq(9, 15, length.out=100)
grid = expand.grid(female_lambda = female_lambda, male_lambda=male_lambda)
profile_values <- apply(grid, 1, profile_2d)
grid$likelihood <- nll_to_L(profile_values)
contourplot(likelihood ~ female_lambda * male_lambda, grid)
nll_to_L <- \(nll) exp(-nll) / max(exp(-nll))
nll_female <- sapply(lambdas, profile_likelihood, cloth, 'female')
nll_male <- sapply(lambdas, profile_likelihood, cloth, 'male')
par(mfrow=c(1,1))
plot(lambdas, nll_to_L(nll_female), type='l', col='red', ylab="")
lines(lambdas, nll_to_L(nll_male), col='blue')
abline(h=.85, lty='dashed')
title(ylab = 'Scaled Likelihood', xlab="dispersion Parameter")
legend(14, 1, c("Female", "Male", "95% Conf."), col = c("red", "blue", "black"), lty=c("solid", "solid", "dashed"))
levelplot(likelihood ~ female_lambda * male_lambda, grid, )
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 10))$objective
}
male_lambda <- seq(5, 20, length.out=100)
female_lambda <- seq(9, 15, length.out=100)
grid = expand.grid(female_lambda = female_lambda, male_lambda=male_lambda)
profile_values <- apply(grid, 1, profile_2d)
grid$likelihood <- nll_to_L(profile_values)
levelplot(likelihood ~ female_lambda * male_lambda, grid, )
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
print(grid[1])
print(grid[2])
optimize(nll, c(0.0001, 10))$objective
}
male_lambda <- seq(5, 20, length.out=100)
female_lambda <- seq(9, 15, length.out=100)
grid = expand.grid(female_lambda = female_lambda, male_lambda=male_lambda)
profile_values <- apply(grid, 1, profile_2d)
profile_2d(c(1, 100))
profile_2d(c(1, 100))
profile_2d(c(1, 10))
profile_2d(c(1, 1))
profile_2d(c(2, 100))
profile_2d(c(1, 10))
profile_2d(c(1, 1))
load("data.rds")
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 10))$objective
}
profile_2d(c(2, 100))
profile_2d(c(1, 10))
profile_2d(c(1, 1))
load("data.rds")
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
print(weights)
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 10))$objective
}
profile_2d(c(2, 100))
profile_2d(c(1, 10))
print((!is_female)*grid[2])
load("data.rds")
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == sex
weights <- is_female * grid[1] + (!is_female)*grid[2]
print((!is_female)*grid[2])
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 10))$objective
}
profile_2d(c(2, 100))
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == "female"
weights <- is_female * grid[1] + (!is_female)*grid[2]
print((!is_female)*grid[2])
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 10))$objective
}
profile_2d(c(2, 100))
profile_2d(c(1, 10))
profile_2d(c(1, 1))
male_lambda <- seq(5, 20, length.out=100)
female_lambda <- seq(9, 15, length.out=100)
grid = expand.grid(female_lambda = female_lambda, male_lambda=male_lambda)
profile_values <- apply(grid, 1, profile_2d)
load("data.rds")
profile_2d <- function(grid){
nll <- function(par){
is_female <- cloth$sex == "female"
weights <- is_female * grid[1] + (!is_female)*grid[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par, log = T))
}
optimize(nll, c(0.0001, 10))$objective
}
male_lambda <- seq(5, 20, length.out=100)
female_lambda <- seq(9, 15, length.out=100)
grid = expand.grid(female_lambda = female_lambda, male_lambda=male_lambda)
profile_values <- apply(grid, 1, profile_2d)
grid$likelihood <- nll_to_L(profile_values)
contourplot(likelihood ~ female_lambda * male_lambda, grid, )
male_lambda <- seq(11, 14, length.out=100)
female_lambda <- seq(11, 14, length.out=100)
grid = expand.grid(female_lambda = female_lambda, male_lambda=male_lambda)
profile_values <- apply(grid, 1, profile_2d)
grid$likelihood <- nll_to_L(profile_values)
contourplot(likelihood ~ female_lambda * male_lambda, grid, )
male_lambda <- seq(10, 13, length.out=50)
female_lambda <- seq(11, 14, length.out=50)
grid = expand.grid(female_lambda = female_lambda, male_lambda=male_lambda)
profile_values <- apply(grid, 1, profile_2d)
grid$likelihood <- nll_to_L(profile_values)
contourplot(likelihood ~ female_lambda * male_lambda, grid, )
profile_likelihood <- function(lambda, data, sex) {
design_mat <- model.matrix(~ subjId + tOut + tInOp, data=cloth)
n_par <- 2 #ncol(design_mat) + 2
nll <- function(par){
is_female <- data$sex == sex
weights <- is_female * lambda + (!is_female)*par[1]
-sum(dgamma(data$clo, shape = weights, scale = par[2], log = T))
}
optim(rep(1, n_par), nll, method = "L-BFGS-B", lower=c(rep(0.001, n_par)))$value
}
# male_lambda <- seq(10, 13, length.out=50)
# female_lambda <- seq(11, 14, length.out=50)
# grid = expand.grid(female_lambda = female_lambda, male_lambda=male_lambda)
# profile_values <- apply(grid, 1, profile_2d)
# grid$likelihood <- nll_to_L(profile_values)
# # contourplot(likelihood ~ female_lambda * male_lambda, grid, )
lambdas = seq(9, 15, length.ou=100)
# male_lambda <- seq(10, 13, length.out=50)
# female_lambda <- seq(11, 14, length.out=50)
# grid = expand.grid(female_lambda = female_lambda, male_lambda=male_lambda)
# profile_values <- apply(grid, 1, profile_2d)
# grid$likelihood <- nll_to_L(profile_values)
# # contourplot(likelihood ~ female_lambda * male_lambda, grid, )
lambdas = seq(9, 15, length.ou=100)
nll_to_L <- \(nll) exp(-nll) / max(exp(-nll))
nll_female <- sapply(lambdas, profile_likelihood, cloth, 'female')
nll_male <- sapply(lambdas, profile_likelihood, cloth, 'male')
par(mfrow=c(1,1))
plot(lambdas, nll_to_L(nll_female), type='l', col='red', ylab="")
lines(lambdas, nll_to_L(nll_male), col='blue')
abline(h=.85, lty='dashed')
title(ylab = 'Scaled Likelihood', xlab="dispersion Parameter")
legend(14, 1, c("Female", "Male", "95% Conf."), col = c("red", "blue", "black"), lty=c("solid", "solid", "dashed"))
plot(lambdas, nll_to_L(nll_female), type='l', col='red', ylab="", xlab="")
lines(lambdas, nll_to_L(nll_male), col='blue')
abline(h=.85, lty='dashed')
title(ylab = 'Scaled Likelihood', xlab="dispersion Parameter")
par(mfrow=c(1,1))
plot(lambdas, nll_to_L(nll_female), type='l', col='red', ylab="", xlab="")
lines(lambdas, nll_to_L(nll_male), col='blue')
abline(h=.85, lty='dashed')
title(ylab = 'Scaled Likelihood', xlab="Dispersion Parameter")
legend(14, 1, c("Female", "Male", "95% Conf."), col = c("red", "blue", "black"), lty=c("solid", "solid", "dashed"))
legend(9, 1, c("Female", "Male", "95% Conf."), col = c("red", "blue", "black"), lty=c("solid", "solid", "dashed"))
# male_lambda <- seq(10, 13, length.out=50)
# female_lambda <- seq(11, 14, length.out=50)
# grid = expand.grid(female_lambda = female_lambda, male_lambda=male_lambda)
# profile_values <- apply(grid, 1, profile_2d)
# grid$likelihood <- nll_to_L(profile_values)
# # contourplot(likelihood ~ female_lambda * male_lambda, grid, )
lambdas = seq(9, 15, length.ou=100)
nll_to_L <- \(nll) exp(-nll) / max(exp(-nll))
nll_female <- sapply(lambdas, profile_likelihood, cloth, 'female')
nll_male <- sapply(lambdas, profile_likelihood, cloth, 'male')
par(mfrow=c(1,1))
plot(lambdas, nll_to_L(nll_female), type='l', col='red', ylab="", xlab="")
lines(lambdas, nll_to_L(nll_male), col='blue')
abline(h=.85, lty='dashed')
title(ylab = 'Scaled Likelihood', xlab="Dispersion Parameter")
legend(9, 1, c("Female", "Male", "95% Conf."), col = c("red", "blue", "black"), lty=c("solid", "solid", "dashed"))
nll <- function(par){
is_female <- cloth$sex == 'female'
weights <- is_female * par[1] + (!is_female)*par[2]
-sum(dgamma(cloth$clo, shape = weights, scale = par[3], log = T))
}
opt <- optim(c(1,1,1), nll, method = "L-BFGS-B", lower=c(0.001, 0.001, 0.001, 0.001))
opt$par
