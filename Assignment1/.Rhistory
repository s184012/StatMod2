ox_pr <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=OXYGEN, y=PRSEK, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
ox_lo <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=OXYGEN, y=PRSEK, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
pr_lo <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=PRSEK, y=LOAD, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
ox_pr / ox_lo / pr_lo
?patchwork
ox_pr / ox_lo / pr_lo + plot_layout(guides='collect')
ox_pr <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=OXYGEN, y=LOAD, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
ox_lo <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=OXYGEN, y=PRSEK, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
pr_lo <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=PRSEK, y=LOAD, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
ox_pr / ox_lo / pr_lo + plot_layout(guides='collect')
ox_pr + ox_lo + pr_lo + plot_layout(guides='collect')
ox_pr <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=OXYGEN, y=PRSEK, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
ox_lo <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=LOAD, y=OXYGEN, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
pr_lo <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=LOAD, y=PRSEK, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
ox_pr + ox_lo + pr_lo + plot_layout(guides='collect')
?ggpairs
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(columnsX = c(OXYGEN, LOAD, PRSEK), columnsY = c(PLANT, LAB, TIME))
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(columnsX = c("OXYGEN", "LOAD", "PRSEK"), columnsY = c("PLANT", "LAB", "TIME"))
data <- read.table("dioxin.csv", sep=',', head=TRUE, stringsAsFactors = TRUE)
data$TIME <- as.factor(dat$TIME)
data$TIME <- as.factor(data$TIME)
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(columnsX = c("OXYGEN", "LOAD", "PRSEK"), columnsY = c("PLANT", "LAB", "TIME"))
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(
columnsX = c("OXYGEN", "LOAD", "PRSEK"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O"))
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(
columnsY = c("OXYGEN", "LOAD", "PRSEK"),
columnsX = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O")
)
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(
columnsX = c("OXYGEN", "LOAD", "PRSEK"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O")
)
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(
columnsX = c("O2COR", "NEFFEKT", "QRAT"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O")
)
lm_with_cor <- function(data, mapping, ..., method = "pearson") {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
cor <- cor(x, y, method = method)
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab),
hjust = 0, vjust = 1,
size = 5, fontface = "bold",
inherit.aes = FALSE # do not inherit anything from the ...
)
}
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(
columnsX = c("O2COR", "NEFFEKT", "QRAT"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O"),
types = list(continuos = lm_with_cor)
)
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(
columnsX = c("O2COR", "NEFFEKT", "QRAT"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O"),
types = list(continuous = lm_with_cor)
)
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab, color=lab),
hjust = 0, vjust = 1,
size = 5, fontface = "bold",
inherit.aes = FALSE # do not inherit anything from the ...
)
lm_with_cor <- function(data, mapping, ..., method = "pearson") {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
cor <- cor(x, y, method = method)
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab, color=lab),
hjust = 0, vjust = 1,
size = 5, fontface = "bold",
inherit.aes = FALSE # do not inherit anything from the ...
)
}
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(
columnsX = c("O2COR", "NEFFEKT", "QRAT"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O"),
types = list(continuous = lm_with_cor)
)
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab, fill=cor),
hjust = 0, vjust = 1,
size = 5, fontface = "bold",
inherit.aes = FALSE # do not inherit anything from the ...
)
lm_with_cor <- function(data, mapping, ..., method = "pearson") {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
cor <- cor(x, y, method = method)
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab, fill=cor),
hjust = 0, vjust = 1,
size = 5, fontface = "bold",
inherit.aes = FALSE # do not inherit anything from the ...
)
}
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(
columnsX = c("O2COR", "NEFFEKT", "QRAT"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O"),
types = list(continuous = lm_with_cor)
)
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab),
hjust = 0, vjust = 1,
size = 5, fontface = "bold",
inherit.aes = FALSE # do not inherit anything from the ...
)
lm_with_cor <- function(data, mapping, ..., method = "pearson") {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
cor <- cor(x, y, method = method)
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab),
hjust = 0, vjust = 1,
size = 5, fontface = "bold",
inherit.aes = FALSE # do not inherit anything from the ...
)
}
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(
columnsX = c("O2COR", "NEFFEKT", "QRAT"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O"),
types = list(continuous = lm_with_cor)
)
cor <- cor(x, y, method = method, use = "na.or.complete")
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab),
hjust = 0, vjust = 1,
size = 5, fontface = "bold",
inherit.aes = FALSE # do not inherit anything from the ...
)
lm_with_cor <- function(data, mapping, ..., method = "pearson") {
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
cor <- cor(x, y, method = method, use = "na.or.complete")
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab),
hjust = 0, vjust = 1,
size = 5, fontface = "bold",
inherit.aes = FALSE # do not inherit anything from the ...
)
}
data |>
replace_na(list(PRSEK = 'L')) |>
ggduo(
columnsX = c("O2COR", "NEFFEKT", "QRAT"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O"),
types = list(continuous = lm_with_cor)
)
data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX))
data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX)) |>
ggduo(
columnsX = c("O2COR", "NEFFEKT", "QRAT"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O"),
types = list(continuous = lm_with_cor)
)
O2COR_passive <- data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX)) |>
ggduo(
columnsX = c("O2COR"),
columnsY = c("CO2", "SO2", "H2O"),
types = list(continuous = lm_with_cor)
)
O2COR_passive
data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX)) |>
ggduo(
columnsX = c("O2COR", "NEFFEKT", "QRAT"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O"),
types = list(continuous = lm_with_cor)
)
O2COR_passive <- data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX)) |>
ggduo(
columnsX = c("O2COR"),
columnsY = c("CO2", "SO2", "H2O", "CO"),
types = list(continuous = lm_with_cor)
)
O2COR_passive
data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX)) |>
ggduo(
columnsX = c("O2COR", "NEFFEKT", "QRAT"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O"),
types = list(continuous = lm_with_cor)
)
NEFFEKT_passive <- data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX)) |>
ggduo(
columnsX = c("NEFFEKT"),
columnsY = c("TROEG", "CO2", "CO", "SO2", "H2O"),
types = list(continuous = lm_with_cor)
)
NEFFEKT_passive
O2COR_passive <- data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX)) |>
ggduo(
columnsX = c("O2COR"),
columnsY = c("CO2", "SO2", "H2O", "CO"),
types = list(continuous = lm_with_cor)
)
data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX)) |>
ggduo(
columnsX = c("O2COR", "NEFFEKT", "QRAT"),
columnsY = c("DIOX", "QROEG", "TOVN", "TROEG", "POVN", "CO2", "CO", "SO2", "HCL", "H2O"),
types = list(continuous = lm_with_cor)
)
QRAT_passive<- data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX)) |>
ggduo(
columnsX = c("QRAT"),
columnsY = c("QROEG", "TOVN", "CO"),
types = list(continuous = lm_with_cor)
)
O2COR_passive + NEFFEKT_passive + QRAT_passive
O2COR_passive | NEFFEKT_passive | QRAT_passive
library(patchwork)
O2COR_passive | NEFFEKT_passive | QRAT_passive
QRAT_passive<- data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX)) |>
ggduo(
columnsX = c("QRAT"),
columnsY = c("QROEG", "TOVN", "CO"),
types = list(continuous = lm_with_cor)
)
QRAT_passive
O2COR_passive | NEFFEKT_passive | QRAT_passive
O2COR_passive | NEFFEKT_passive | QRAT_passive
O2COR_passive
NEFFEKT_passive
QRAT_passive
O2COR_passive + NEFFEKT_passive + QRAT_passive
wrap_elements(ggmatrix_gtable(O2COR_passive)) + wrap_elements(ggmatrix_gtable(NEFFEKT_passive)) + wrap_elements(ggmatrix_gtable(QRAT_passive))
NEFFEKT_passive <- data |>
replace_na(list(PRSEK = 'L')) |>
mutate(DIOX = log(DIOX)) |>
ggduo(
columnsX = c("NEFFEKT"),
columnsY = c("TROEG", "CO2", "SO2", "H2O", "CO"),
types = list(continuous = lm_with_cor)
)
wrap_elements(ggmatrix_gtable(O2COR_passive)) + wrap_elements(ggmatrix_gtable(NEFFEKT_passive)) + wrap_elements(ggmatrix_gtable(QRAT_passive))
data |>
select(c(PRSEK, QRAT)) |>
group_by(PRSEK) |>
summarise(
mean_qrat=mean(QRAT),
median_qrat = median(QRAT)
)
data |>
ggplot(aes(x=PRSEK, y=QRAT)) +
geom_boxplot()
data |>
replace_na(list(PRSEK = 'L')) |>
mutate(
CAT = paste(
'OX', OXYGEN, 'PRSEK', PRSEK, 'LOAD', LOAD, sep = '_'
)
) |>
ggplot(aes(x=DIOX, color=OXYGEN)) +
geom_freqpoly()
ox_pr <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=OXYGEN, y=PRSEK, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
ox_lo <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=LOAD, y=OXYGEN, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
pr_lo <- data |>
replace_na(list(PRSEK = 'L')) |>
ggplot(aes(x=LOAD, y=PRSEK, fill=DIOX)) +
geom_tile()+
scale_fill_continuous(trans = 'log',type = 'viridis')
ox_pr + ox_lo + pr_lo + plot_layout(guides='collect')
library(GGally)
library(car)
data = read.csv("dioxin.csv", header = TRUE, sep = ",");
print(sapply(data, typeof))
data <- as.data.frame(unclass(data),stringsAsFactors = TRUE)
data$TIME = as.factor(data$TIME)
print(sapply(data, typeof))
attach(data)
ggpairs(data = data, columns = c(2,9:21), title ="Relationships between predictors & response",
lower = list(continuous=wrap("points", alpha = 0.5, size=0.1)))
?preProces
library(car)
library( GGally)
library(car)
library(caret)
rm(list=ls())
library( GGally)
library(car)
library(caret)
library(nlme)
data = read.csv("dioxin.csv", header = TRUE, sep = ",")
print(sapply(data, typeof))
data <- as.data.frame(unclass(data),stringsAsFactors = TRUE)
data$TIME = as.factor(data$TIME)
print(sapply(data, typeof))
m = colMeans(data[c(1:2,9:21)], na.rm = T)
std = sapply(data[,c(1:2,9:21)],sd, na.rm = T)
preproc = preProcess(data, method = "knnImpute")
dat = predict(preproc, data)
dat$PRSEK[15:16] = c("L","L")
sum(is.na(dat))
preproc = preProcess(data, method = "knnImpute")
dat = predict(preproc, data)
install.packages('RANN')
preproc = preProcess(data, method = "knnImpute")
dat = predict(preproc, data)
dat$PRSEK[15:16] = c("L","L")
sum(is.na(dat))
m = unname(m)
std = unname(std)
rep.row<-function(x,n){
matrix(rep(x,each=n),nrow=n)
}
m = rep.row(m, 57)
std = rep.row(std, 57)
dat[,c(1:2,9:21)] = dat[,c(1:2,9:21)]*std + m
attach(dat)
ggpairs(data = dat, columns = c(2,9:21), title ="Relationships between predictors & response",
lower = list(continuous=wrap("points", alpha = 0.5, size=0.1)))
#2. Simple model reduction
mod_1 = lm(DIOX ~ PLANT + TIME + LAB + LOAD + OXYGEN + PRSEK, data = dat)
summary(mod_1)
dat$OXYGEN
data = read.csv("dioxin.csv", header = TRUE, sep = ",")
print(sapply(data, typeof))
data <- as.data.frame(unclass(data),stringsAsFactors = TRUE)
data$TIME = as.factor(data$TIME)
print(sapply(data, typeof))
m = colMeans(data[c(1:2,9:21)], na.rm = T)
std = sapply(data[,c(1:2,9:21)],sd, na.rm = T)
preproc = preProcess(data, method = "knnImpute")
dat = predict(preproc, data)
dat$PRSEK[15:16] = c("L","L")
sum(is.na(dat))
m = unname(m)
std = unname(std)
rep.row<-function(x,n){
matrix(rep(x,each=n),nrow=n)
}
rm(list=ls())
data = read.csv("dioxin.csv", header = TRUE, sep = ",")
print(sapply(data, typeof))
data <- as.data.frame(unclass(data),stringsAsFactors = TRUE)
data$TIME = as.factor(data$TIME)
print(sapply(data, typeof))
m = colMeans(data[c(1:2,9:21)], na.rm = T)
std = sapply(data[,c(1:2,9:21)],sd, na.rm = T)
preproc = preProcess(data, method = "knnImpute")
dat = predict(preproc, data)
dat$PRSEK[15:16] = c("L","L")
sum(is.na(dat))
rm(list=ls())
data = read.csv("dioxin.csv", header = TRUE, sep = ",")
print(sapply(data, typeof))
data <- as.data.frame(unclass(data),stringsAsFactors = TRUE)
data$TIME = as.factor(data$TIME)
print(sapply(data, typeof))
m = colMeans(data[c(1:2,9:21)], na.rm = T)
std = sapply(data[,c(1:2,9:21)],sd, na.rm = T)
preproc = preProcess(data, method = "knnImpute")
library(caret)
preproc = preProcess(data, method = "knnImpute")
dat = predict(preproc, data)
dat$PRSEK[15:16] = c("L","L")
sum(is.na(dat))
m = unname(m)
std = unname(std)
rep.row<-function(x,n){
matrix(rep(x,each=n),nrow=n)
}
m = rep.row(m, 57)
std = rep.row(std, 57)
dat[,c(1:2,9:21)] = dat[,c(1:2,9:21)]*std + m
save(dat)
save(dat, 'data.RDS')
save('data.RDS', data)
save(data, file='data.rds')
